// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::drivetrainFrontRight;
std::shared_ptr<SpeedController> RobotMap::drivetrainBackRight;
std::shared_ptr<SpeedController> RobotMap::drivetrainFrontLeft;
std::shared_ptr<SpeedController> RobotMap::drivetrainBackLeft;
std::shared_ptr<RobotDrive> RobotMap::drivetrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    drivetrainFrontRight.reset(new TalonSRX(0));
    lw->AddActuator("Drivetrain", "FrontRight", std::static_pointer_cast<TalonSRX>(drivetrainFrontRight));
    
    drivetrainBackRight.reset(new TalonSRX(1));
    lw->AddActuator("Drivetrain", "BackRight", std::static_pointer_cast<TalonSRX>(drivetrainBackRight));
    
    drivetrainFrontLeft.reset(new TalonSRX(2));
    lw->AddActuator("Drivetrain", "FrontLeft", std::static_pointer_cast<TalonSRX>(drivetrainFrontLeft));
    
    drivetrainBackLeft.reset(new TalonSRX(3));
    lw->AddActuator("Drivetrain", "BackLeft", std::static_pointer_cast<TalonSRX>(drivetrainBackLeft));
    
    drivetrainRobotDrive41.reset(new RobotDrive(drivetrainFrontLeft, drivetrainBackLeft,
              drivetrainFrontRight, drivetrainBackRight));
    
    drivetrainRobotDrive41->SetSafetyEnabled(true);
        drivetrainRobotDrive41->SetExpiration(0.1);
        drivetrainRobotDrive41->SetSensitivity(0.5);
        drivetrainRobotDrive41->SetMaxOutput(1.0);

        drivetrainRobotDrive41->SetInvertedMotor(RobotDrive::kFrontRightMotor, true);
        drivetrainRobotDrive41->SetInvertedMotor(RobotDrive::kRearRightMotor, true);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORSS
}
